{"remainingRequest":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shahir/Desktop/projects/QMS/qms/qms-vue/src/components/TrainingEvalution/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/src/components/TrainingEvalution/list.vue","mtime":1554731290472},{"path":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shahir/Desktop/projects/QMS/qms/qms-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport router from \"../../router\";\n\nexport default {\n  data() {\n    return {\n      drawer: null,\n      // table ist\n      headers: [\n        { text: \"ID\", align: \"left\", value: \"id\" },\n        { text: \"Trg No\", value: \"trg_no\" },\n        { text: \"Training Topic\", value: \"training_topic\" },\n        { text: \"Date Of Training\", value: \"date_of_trainig\" },\n        { text: \"Faculty\", value: \"faculty\" },\n        { text: \"Venue\", value: \"venue\" },\n        { text: \"Evaluation criteria\", value: \"evaluation_criteria\" },\n        { text: \"Evaluatd By\", value: \"evaluated_By\" },\n      ],\n      info: [],\n     \n      //  push to database\n      valid: true,\n      modal: false,\n      dot: new Date().toISOString().substr(0, 10),\n      trg_no:'', trainingTopic:'', faculty:'', venue:'', nop:'', score:'', evl:'', eot: '', evaluate:'',\n      \n      // form rules or validation\n      trg_noRules:[v => !!v || \"This field is required\"],\n      trainingTopicRules:[v => !!v || \"This field is required\"],\n      facultyRules:[v => !!v || \"This field is required\"],\n      venueRules:[v => !!v || \"This field is required\"],\n      nopRules:[v => !!v || \"This field is required\"],\n      scoreRules:[v => !!v || \"This field is required\"],\n      evlRules:[v => !!v || \"This field is required\"],\n      eotRules:[v => !!v || \"This field is required\"],\n      evaluateRules:[v => !!v || \"This field is required\"],\n    };\n  },\n\n  mounted() {\n    this.getall();\n  },\n\n  methods: {\n    // fetch all hr list\n    getall() {\n      var self = this;\n      axios\n        .get(this.$apiUrl+\"training-evalution/\")\n        .then(function(response) {\n          self.info = response.data;\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    },\n\n    validate: function() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        var self = this;\n          axios({\n              method: \"post\",\n              url: this.$apiUrl+\"training-evalution/\",\n              data: {\n                trg_no: self.trg_no ,  \n                training_topic: self.trainingTopic , \n                date_of_trainig: self.dot , \n                faculty: self.faculty ,  \n                venue: self.venue ,  \n                name_of_participant : self.nop ,  \n                score: self.score , \n                evaluation_criteria: self.evl , \n                Effectiveness_of_Training: self.eot , \n                evaluated_By: self.evaluate , \n              }\n            })\n          .then(function(response) {\n            self.getall()\n            self.drawer = !self.drawer;\n            swal({\n              title: \"Success\",\n              type: \"success\",\n              text: \"Successfully  Added\",\n              showConfirmButton: false,\n              showCloseButton: false,\n              timer: 3000\n            });\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  }\n};\n",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/components/TrainingEvalution","sourcesContent":["<template>\n  <div>\n    <v-layout row wrap class=\"action-bar\">\n      <v-flex xs6>\n        <h3 class=\"page-name\"> Training Evaluation Record\t\t</h3>\n      </v-flex>\n      <v-flex xs6>\n        <div class=\"text-xs-right\">\n          <v-btn color=\"primary\" ref=\"fileInput\" @click.stop=\"drawer = !drawer\">\n            Add New\n            <v-icon right>add</v-icon>\n          </v-btn>\n        </div>\n      </v-flex>\n    </v-layout>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"info\"\n      class=\"elevation-1\"\n      :rows-per-page-items=\"[10,20,50]\"\n    >\n      <template v-slot:items=\"props\">\n        <td class=\"text-xs-left\"> <router-link :to=\"{ path: 'training-evalution-record/'+ props.item.id }\" >{{ props.item.id }}</router-link> </td>\n        <td class=\"text-xs-left\"><router-link :to=\"{ path: 'training-evalution-record/'+ props.item.id }\" >{{ props.item.trg_no }}</router-link></td>\n        <td class=\"text-xs-left\">{{ props.item.training_topic }}</td>\n        <td class=\"text-xs-left\">{{ props.item.date_of_trainig }}</td>\n        <td class=\"text-xs-left\">{{ props.item.faculty }}</td>\n        <td class=\"text-xs-left\">{{ props.item.venue }}</td>\n        <td class=\"text-xs-left\">{{ props.item.evaluation_criteria }}</td>\n        <td class=\"text-xs-left\">{{ props.item.evaluated_By }}</td>\n      </template>\n    </v-data-table>\n\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      temporary\n      right\n      width=\"650\"\n      class=\"form-drawer elevation-0\"\n    >\n      <div class=\"post-form-container\">\n        <div class=\"post-form\">\n          <!-- post form -->\n          <h3>Add ANNUAL TRAINING PLAN</h3>\n          <br>\n          <v-form ref=\"form\" v-model=\"valid\" id=\"emp\" lazy-validation>\n\n            \n            <v-text-field v-model=\"trg_no\" :counter=\"50\" tupe=\"number\" :rules=\"trg_noRules\" label=\"Trg No\" required ></v-text-field>\n            <v-text-field v-model=\"trainingTopic\" :counter=\"50\" :rules=\"trainingTopicRules\" label=\"Training Topic\" required ></v-text-field>\n            <v-text-field v-model=\"faculty\" :counter=\"50\" :rules=\"facultyRules\" label=\"Faculty Name\" required ></v-text-field>\n\n            <v-dialog\n              ref=\"dialog\"\n              v-model=\"modal\"\n              :return-value.sync=\"dot\"\n              persistent\n              lazy\n              full-width\n              width=\"290px\"\n            >\n              <template v-slot:activator=\"{ on }\">\n                <v-text-field\n                  v-model=\"dot\"\n                  label=\"Date Of Training\"\n                  prepend-icon=\"event\"\n                  readonly\n                  v-on=\"on\"\n                ></v-text-field>\n              </template>\n              <v-date-picker v-model=\"dot\" scrollable>\n                <v-spacer></v-spacer>\n                <v-btn flat color=\"primary\" @click=\"modal = false\">Cancel</v-btn>\n                <v-btn flat color=\"primary\" @click=\"$refs.dialog.save(dot)\">OK</v-btn>\n              </v-date-picker>\n            </v-dialog>\n\n            <v-text-field v-model=\"venue\" :counter=\"50\" :rules=\"venueRules\" label=\"Venue\" required ></v-text-field>\n            <v-text-field v-model=\"nop\" :counter=\"50\" :rules=\"nopRules\" label=\"Name of the Participant\" required ></v-text-field>\n            <v-text-field v-model=\"score\" :counter=\"50\" tupe=\"number\" :rules=\"scoreRules\" label=\"Enter Score\" required ></v-text-field>\n            <v-text-field v-model=\"evl\" :counter=\"300\" :rules=\"evlRules\" label=\"Evalution Criteria\" required ></v-text-field>\n            <v-text-field v-model=\"eot\" :counter=\"200\" :rules=\"eotRules\" label=\"Effectiveness of Training\" required ></v-text-field>\n            <v-text-field v-model=\"evaluate\" :counter=\"50\" :rules=\"evaluateRules\" label=\"Evaluated By\" required ></v-text-field>\n            \n            <v-btn :disabled=\"!valid\" color=\"success\" @click=\"validate\">Submit</v-btn>\n            <v-btn color=\"error\" @click=\"reset\">Reset Form</v-btn>\n            <v-btn color=\"warning\" @click.stop=\"drawer = !drawer\">Cancel</v-btn>\n          </v-form>\n        </div>\n      </div>\n    </v-navigation-drawer>\n  </div>\n\n  <!-- \n    # Fetch hr lis - api - http://localhost:8000/api/v1/hr/\n    #add new post - component - addPost\n  -->\n</template>\n\n\t\t\t\n<script>\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport router from \"../../router\";\n\nexport default {\n  data() {\n    return {\n      drawer: null,\n      // table ist\n      headers: [\n        { text: \"ID\", align: \"left\", value: \"id\" },\n        { text: \"Trg No\", value: \"trg_no\" },\n        { text: \"Training Topic\", value: \"training_topic\" },\n        { text: \"Date Of Training\", value: \"date_of_trainig\" },\n        { text: \"Faculty\", value: \"faculty\" },\n        { text: \"Venue\", value: \"venue\" },\n        { text: \"Evaluation criteria\", value: \"evaluation_criteria\" },\n        { text: \"Evaluatd By\", value: \"evaluated_By\" },\n      ],\n      info: [],\n     \n      //  push to database\n      valid: true,\n      modal: false,\n      dot: new Date().toISOString().substr(0, 10),\n      trg_no:'', trainingTopic:'', faculty:'', venue:'', nop:'', score:'', evl:'', eot: '', evaluate:'',\n      \n      // form rules or validation\n      trg_noRules:[v => !!v || \"This field is required\"],\n      trainingTopicRules:[v => !!v || \"This field is required\"],\n      facultyRules:[v => !!v || \"This field is required\"],\n      venueRules:[v => !!v || \"This field is required\"],\n      nopRules:[v => !!v || \"This field is required\"],\n      scoreRules:[v => !!v || \"This field is required\"],\n      evlRules:[v => !!v || \"This field is required\"],\n      eotRules:[v => !!v || \"This field is required\"],\n      evaluateRules:[v => !!v || \"This field is required\"],\n    };\n  },\n\n  mounted() {\n    this.getall();\n  },\n\n  methods: {\n    // fetch all hr list\n    getall() {\n      var self = this;\n      axios\n        .get(this.$apiUrl+\"training-evalution/\")\n        .then(function(response) {\n          self.info = response.data;\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    },\n\n    validate: function() {\n      if (this.$refs.form.validate()) {\n        this.snackbar = true;\n        var self = this;\n          axios({\n              method: \"post\",\n              url: this.$apiUrl+\"training-evalution/\",\n              data: {\n                trg_no: self.trg_no ,  \n                training_topic: self.trainingTopic , \n                date_of_trainig: self.dot , \n                faculty: self.faculty ,  \n                venue: self.venue ,  \n                name_of_participant : self.nop ,  \n                score: self.score , \n                evaluation_criteria: self.evl , \n                Effectiveness_of_Training: self.eot , \n                evaluated_By: self.evaluate , \n              }\n            })\n          .then(function(response) {\n            self.getall()\n            self.drawer = !self.drawer;\n            swal({\n              title: \"Success\",\n              type: \"success\",\n              text: \"Successfully  Added\",\n              showConfirmButton: false,\n              showCloseButton: false,\n              timer: 3000\n            });\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.post-form-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: auto;\n}\n.post-form-container .post-form {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding: 30px 25px;\n}\n.v-input__prepend-outer {\n  display: none !important;\n}\n</style>\n\n<style >\n#emp .v-input__prepend-outer {\n  display: none !important;\n}\n</style>"]}]}